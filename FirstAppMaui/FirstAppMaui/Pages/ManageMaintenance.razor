@page "/managemaintenance"
@using Common.Entities;
@using Common.ViewModel;
@using FirstAppMaui.Data;
@using Microsoft.JSInterop;
@inject MaintenanceServicesService mSerService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<h3>Manage Maintenance Services</h3>

<a href="/maintenancedetails" class="btn btn-primary">New Maintenance Service</a>


@if (maintenanceServices == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Service Name</th>
                <th>Description</th>
                <th>Price</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mService in maintenanceServices)
            {
                <tr>
                    <td>@mService.ServiceName</td>
                    <td>@mService.Description</td>
                    <td>@mService.Price</td>
                    <td>
                        <a class="btn btn-warning" href="/maintenancedetails/@mService.Id">Edit</a>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="()=>DeleteCar(mService.Id.ToString())">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<MaintenanceService> maintenanceServices = new();

    protected override async Task OnInitializedAsync()
    {
        maintenanceServices = await mSerService.GetMServices();
    }

    private async Task DeleteCar(string mId)
    {
        var success = await mSerService.DeleteMService(mId);

        if (success)
        {
            await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
            NavigationManager.NavigateTo($"/managemaintenance");
            await OnInitializedAsync();
        }
    }
}
