@page "/login"
@using Common.ViewModel;
@inject UserService userService
@inject CustomAuthStateProvider AuthStateProvider 
@inject NavigationManager navMgr

<h3>Login</h3>

<EditForm Model="@loginViewModel" OnValidSubmit="LoginService">
    <DataAnnotationsValidator />
    <div class="from-group">
        <label for="emailInput">Email:</label>
        <InputText id="emailInput" @bind-Value="loginViewModel.Email" class="form-control" />
        <ValidationMessage For="@(()=>loginViewModel.Email)"/>
    </div>

    <div class="from-group">
        <label for="passwordInput">Password:</label>
        <InputText id="passwordInput" @bind-Value="loginViewModel.Password" class="form-control" type="password" />
        <ValidationMessage For="@(()=>loginViewModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

<p>@message</p>


@code {
    private LoginViewModel loginViewModel = new();
    private string message = "";

    private async Task LoginService()
    {
        var authUser = await userService.Login(loginViewModel);
        if (authUser is not null)
        {
            await AuthStateProvider.Login(authUser);


            message = "Login successful!";

            //Redirect To home
            navMgr.NavigateTo("");
        }
        else
        {
            message = "Login failed!";
        }
    }
}
